# -*- org-hugo-default-static-subdirectory-for-externals: "files/"; -*-
#+HUGO_BASE_DIR: .
#+STARTUP: inlineimages
#+DEFAULT_EXPORTER: hugo

* Home
:PROPERTIES:
:EXPORT_HUGO_SECTION:
:EXPORT_FILE_NAME: _index
:END:

I am a *PhD student* at [[https://es.aau.dk][Department of Electronic Systems]], [[https://aau.dk][Aalborg University]] (AAU) working on *security aspects of machine learning, and applied cases of machine learning in adversarial settings*.

After obtaining a M.Sc. in Machine Intelligence ([thesis](/files/msc_thesis.pdf)) and B.Sc. in Software Engineering from AAU, I went onto become a data scientist and utilize machine learning for a variety of business applications.
These applications spanned across multiple fields, such as: medical ([[https://enversion.dk][Enversion]]), insurance ([[https://ecsact.dk][Ecsact]], [[https://tryg.com][Tryg Insurance]]) and logistics ([[https://ecsact.dk][Ecsact]]).

The research conducted throughout my PhD is set out to *improve the robustness of phishing detection models* by a set of empirical studies, that leads to more fundamental research that address the underlying methodologies and theories.

<aside>
<h2 data-icon="&#xf19d;">Curriculum Vitae</h2>
<p>
	You can browse my CV as a PDF through <a href="/download/cv.pdf">this link</a>.
</p>
</aside>

* Publications Section
:PROPERTIES:
:EXPORT_HUGO_SECTION: publications
:END:

** Publications
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_MENU: :menu primary :weight 1
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :icon "&#xe800;"
:END:


As a researcher most of my work are available as publications in the form of peer-reviewed scientific articles and journals.
If you have questions or comments about my publications, [[/contact/][send me an email]].

<aside>
<h2 data-icon="&#xf2b5;">Collaboration</h2>
If you are interessted in collaborating with me don't hesitate to <a href="/contact/">contact me</a>.
</aside>

** CAUSE: Learning Granger Causality from Event Sequences using Attribution Methods
:PROPERTIES:
:EXPORT_FILE_NAME: cause
:EXPORT_DATE: 2020-02-18:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :link https://arxiv.org/abs/2002.07906
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :pdflink https://arxiv.org/pdf/2002.07906.pdf
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :venueshort  ICML 2020
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Proceedings of the 37th International Conference on Machine Learning
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :authors '("Wei Zhang" "Thomas Kobber Panum" "Somesh Jha" "Prasad Chalasani" "David Page")
:END:

** Kraaler: A User Perspective Web Crawler
:PROPERTIES:
:EXPORT_FILE_NAME: kraaler
:EXPORT_DATE: 2019-04-01T00:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :venueshort  TMA 2019
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Proceedings of the 3rd Network Traffic Measurement and Analysis Conference
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :authors '("Thomas Kobber Panum" "René Rydhof Hansen" "Jens Myrup Pedersen")
:END:

This is Kraaler

** Haaukins: A Highly Accessible and Automated Virtualization Platform for Security Education
:PROPERTIES:
:EXPORT_FILE_NAME: haaukins
:EXPORT_DATE: 2019-01-15T00:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :venueshort ICALT 2019
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Proceedings of the 19th IEEE International Conference on Advanced Learning Technologies
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :authors '("Thomas Kobber Panum" "Kaspar Hageman" "Jens Myrup Pedersen" "René Rydhof Hansen")
:END:

* Dissemination Section
:PROPERTIES:
:EXPORT_HUGO_SECTION: dissemination
:END:

** Dissemination
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_MENU: :menu primary :weight 2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :icon "&#xe801;"
:END:

Being a researcher, I believe knowledge has no value if not being shared.
Communication, in the form of dissemination, is thereby essential for both me and my work.
You can find a list of dissemination related to my research below.

<aside>
    <h2 data-icon="&#xe805;">Giving talks</h2>
    Speaking about my research field, in a both technical and more publical accesible fashion, are enjoyable to me.
    Feel free to contact me if you believe I could give a valuable presentation in your setting.
    <p>
    </p>
    <h2 data-icon="&#xe804;">Writing articles</h2>
    <p>
	If you want me to write an article for your media.
	Send me <a href="/contact/">an email</a> with the conditions and hopefully we can arrange it.
    </p>
</aside>

** Machine Learning: The Unspoken Part
:PROPERTIES:
:EXPORT_FILE_NAME: ml_unspoken
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind invited talk
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Highlight known limitations of machine learning, and discussing their future
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :talks '("Wiley, Copenhagen (April 2019)" "Copenhagen Business Academy, Lyngby (April 2019)" "AspIT, Aalborg (April 2019)" "IUM, Copenhagen (April 2019)" "LEGO, Billund (April 2019)" "IDA, Aalborg (April 2019)" "Zealand, Slagelse (April 2019)" "IDA, Copenhagen (April 2019)" "IDA, Aarhus (May 2019)")
:END:

** Afslørede CPR-numre: Forsikringsselskab stopper online salg efter Version2-artikler
:PROPERTIES:
:EXPORT_FILE_NAME: if_cpr_leak_follow_up_two
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2020-05-13T06:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Version2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://www.version2.dk/artikel/afsloerede-cpr-numre-forsikringsselskab-stopper-online-salg-efter-version2-artikler-1090599
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/if_cpr_leak3.png
:END:

** Efter afsløring af kritisk CPR-hul: Ministerium kræver svar fra IF Forsikring
:PROPERTIES:
:EXPORT_FILE_NAME: if_cpr_leak_follow_up
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2020-04-30T06:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Version2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://www.version2.dk/artikel/efter-afsloering-kritisk-cpr-hul-ministerium-kraever-svar-if-forsikring-1090523
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/if_cpr_leak2.png
:END:

** Kritisk CPR-hack: Forsikringsselskab lod alle og enhver snuse rundt i CPR-registret
:PROPERTIES:
:EXPORT_FILE_NAME: if_cpr_leak
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2020-04-29T06:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Version2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://www.version2.dk/artikel/kritisk-cpr-hack-forsikringsselskab-lod-alle-enhver-snuse-rundt-cpr-registret-1090515
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/if_cpr_leak.png
:END:

** Skats hjemmeside er ikke en sikker forbindelse
:PROPERTIES:
:EXPORT_FILE_NAME: skat_https_dr
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2018-05-11T11:50:39+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher DR
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://www.dr.dk/ligetil/indland/skats-hjemmeside-er-ikke-en-sikker-forbindelse
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/skat_dr_2018_2.png
:END:

** Sikkerhedshul på Skats hjemmeside: "Det er kritisk"
:PROPERTIES:
:EXPORT_FILE_NAME: skat_https_dr_2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2018-05-11T13:18:04+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher DR
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://www.dr.dk/nyheder/viden/teknologi/sikkerhedshul-paa-skats-hjemmeside-det-er-kritisk
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/skat_dr_2018.png
:END:

** HTTPS: Skat lover krypteret forbindelse fra 1. juli
:PROPERTIES:
:EXPORT_FILE_NAME: skat_https_version2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2018-05-11T12:50:39+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Version2
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://www.version2.dk/artikel/https-skat-lover-krypteret-forbindelse-1-juli-1085110
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/skat_version2.png
:END:

** Kunstig intelligens lider også af menneskelige fejl
:PROPERTIES:
:EXPORT_FILE_NAME: kunstig_int_fejl
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind media
:EXPORT_DATE: 2019-04-18T10:46:39+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :publisher Videnskab.dk
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :link https://videnskab.dk/teknologi-innovation/kunstig-intelligens-lider-ogsaa-af-menneskelige-fejl
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :backup_url /img/backup/videnskabdk_2019.jpg
:END:

* Teaching Section
:PROPERTIES:
:EXPORT_HUGO_SECTION: teaching
:END:

** Teaching
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_MENU: :menu primary :weight 3
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :icon "&#xf19d;"
:END:

 I sincerely like to teach, and believe it is an important duty for any researcher, as a step towards dissemination.

<aside>
    <h2 data-icon="&#xf1ae;">Guest lectures</h2>
    <p>
	Generally my teaching obligations are often already full.
	However, depending on the conditions I am occasionally available for a guest lecture.
	<a href="/contact/">Contact me by email</a> and describe your proposition.
    </p>
</aside>

** General Programming
:PROPERTIES:
:EXPORT_FILE_NAME: general_programming
:EXPORT_DATE: 2013-02-01T11:16:34+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2013
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Teaching assistant of Anders Bruun's course
:END:

** System Analysis & Design
:PROPERTIES:
:EXPORT_FILE_NAME: ooad
:EXPORT_DATE: 2012-09-01T11:16:34+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Fall 2012
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Teaching assistant of Lise Tordrup Heeager's course
:END:

** Principles of Operating Systems and Concurrency
:PROPERTIES:
:EXPORT_FILE_NAME: pss
:EXPORT_DATE: 2019-04-01T15:18:34+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2018, 2019
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Guest lecture on practical security and vulnabilities
:END:

** Secure Software
:PROPERTIES:
:EXPORT_FILE_NAME: secure_software
:EXPORT_DATE: 2018-08-01T23:06:04+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Autumn 2018
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host IT Vest, Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Taught in collaboration with René Rydhof Hansen
:END:

** Secure Software in Practice
:PROPERTIES:
:EXPORT_FILE_NAME: secure_software_practice
:EXPORT_DATE: 2019-01-01T22:40:38+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2019
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host IT Vest, Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Taught in collaboration with René Rydhof Hansen
:END:

** Security of Web Applications
:PROPERTIES:
:EXPORT_FILE_NAME: security_web
:EXPORT_DATE: 2018-10-01T23:03:36+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Autumn 2018
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host IT Vest, Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Taught in collaboration with René Rydhof Hansen
:END:

** System Development
:PROPERTIES:
:EXPORT_FILE_NAME: system_development
:EXPORT_DATE: 2011-02-01T11:16:34+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2011
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Teaching assistant of Anders Bruun's course
:END:
** Traffic Analysis and Network Security
:PROPERTIES:
:EXPORT_FILE_NAME: traffic_analysis_network_sec
:EXPORT_DATE: 2017-12-01T23:08:53+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind course
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 5 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Winter 2017
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Taught in collaboration with Kaspar Hageman and Jens Myrup Pedersen
:END:

** B.Sc. in Computer Science, 4th Semester
:PROPERTIES:
:EXPORT_FILE_NAME: bsc_comp_sci_18
:EXPORT_DATE: 2018-02-02T23:19:46+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind supervision
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 15 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2018
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description A group of six students.
:END:

** M.Sc. in Computer Science, 4th Semester
:PROPERTIES:
:EXPORT_FILE_NAME: msc_comp_sci_19
:EXPORT_DATE: 2019-02-02T23:12:41+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind supervision
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 15 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2019
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Co-supervised a group of two students for their master thesis
:END:

** B.Sc. in Software Engineering, 4th Semester
:PROPERTIES:
:EXPORT_FILE_NAME: bsc_sw_15
:EXPORT_DATE: 2015-02-02T23:12:41+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind supervision
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 15 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2015
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Six groups of a total 31 students
:END:

** B.Sc. in Software Engineering, 4th Semester
:PROPERTIES:
:EXPORT_FILE_NAME: bsc_sw_19
:EXPORT_DATE: 2019-02-01T23:23:27+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :kind supervision
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :period Spring 2019
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :credit 15 ECTS
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :host Aalborg University
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description A group of six students
:END:

* Contact Section
:PROPERTIES:
:EXPORT_HUGO_SECTION: contact
:END:

** Contact
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_MENU: :menu primary :weight 4
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :icon "&#xf1d8;"
:END:

You are more than welcome to reach out to me, I strive to be open and curious for new conversations.

#+html: <aside>
#+html: <h2 data-icon="&#xe803;">Response time</h2>
I reply most emails within a day or two.
However, if you haven't got a reply from me within two weeks, feel free to resend your email.

#+html: <h2 data-icon="&#xf099;">Other channels</h2>
In the past I have missed emails as they are being flagged as spam.
If you feel this is the case for you, feel free to <a href="https://twitter.com/tpanum">ping me on twitter</a>.
#+html: </aside>

*** Reach out using email
Generally I browse my email inboxes daily, with an exception during holidays.
Depending on your inquiry, please select the best suited email below:

- For messages regarding *research* and *teaching*, please use [[mailto:tkp@es.aau.dk][tkp@es.aau.dk]].
- Any other matter should, please use my personal email, [[mailto:thomas@panum.dk][thomas@panum.dk]].

In case you do not get a reply, it is most likely due to me being too busy for answering at the moment, or in a rare scenario I might have overlooked your message unintentionally.

*** Calling
Send me an email asking for a call and describe its purpose.
Following this, we can arrange a suitable platform and time frame for the call.

*** Meet with me
If you see me at a conference, don't be shy to reach out.
However, if you desire to meet me in my natural habitat, you can find me in at my office in Aalborg.


*** Office in Aalborg
Ensuring the pressence of me, requires arranging an appointment on before hand. Feel free to reach out using email, in order arrange one.
You find my office located in the following address:

> Aalborg University<br/>
> Fredrik Bajers Vej 7A, A3-213<br/>
> 9000 Aalborg<br/>
> Denmark

* Blog Section
:PROPERTIES:
:EXPORT_HUGO_SECTION: blog
:END:

** Blog
:PROPERTIES:
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_MENU: :menu "primary"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :icon "&#xf1e0"
:END:

** Hello Hugo!
:PROPERTIES:
:EXPORT_FILE_NAME: hello_hugo
:EXPORT_DATE: 2016-06-12T13:44:52+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :keywords '("programming")
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description First blog post for new blog platform
:END:

About every second year, I suddenly feel the urge to change the layout of my blog.
This usually leads to not only a visual face-lift of the blog, but also an excuse to give into new technologies that have emerged within the last years.

This year is no excuse, and I decided to dive into [[https://gohugo.io/][Hugo]], which is a static website engine written in [[http://golang.org][Go]].
I have spent the last year primary programming in Go and [[http://python.org][Python]], and it've been an absolute joy.
Seeing Hugo being written in Go, dragged me right in (despite no Go knowlegde needed in order to use Hugo).

Hugo is primary based around three technologies: (Cross platform statically linked) Binary for processing, [[https://daringfireball.net/projects/markdown/][Markdown]] for content, and [[https://golang.org/pkg/text/template/][Go Templates]] for layouts.
The Hugo binary will help you with initializing new projects, content creation, and (extremely fast) real-time processing of content.

As of writing Hugo is currently version 0.16, but don't let that scare you.
It's already widely used, and [[https://github.com/spf13/hugo][the project has over 10.000 stats on GitHub]].

#+html: <center style="margin: 30px 0 30px 0;">

[[file:img/hugo-logo.png]]
#+html: </center>

[[https://www.youtube.com/watch?v=w7Ft2ymGmfc][This video]] will guide you how to get up and running with Hugo in 2 minutes.

** The Robot That Got Me a Home In Copenhagen
:PROPERTIES:
:EXPORT_FILE_NAME: the_robot_that_got_me_a_home_in_copenhagen
:EXPORT_DATE: 2017-04-03T20:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :keywords '("programming")
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Solution for automating apartment hunting in Copenhagen
:END:

Everyone knows the struggle of getting an apartment in Copenhagen.
It is a tough task, and a decent network is surely very valuable in that regard.
However, as many others, I had almost no network in Copenhagen prior to moving here for my job at [[http://ecsact.dk/][Ecsact]].
My journey began at [[https://www.boligportal.dk/][Boligportalen]], which is most used site for finding apartments for rent in Denmark.
One of the most notable features about boligportalen, is the fact that they have an absurdly expensive subscription for accessing contact for the landlords.
At the time of my apartment hunt, the price were approximately 300 DDK/month (~$50), with no guarantees or payback option.
They even had an option get a discount, if you were ready to pay your subscription in advance for several months.
Does anyone /expect/ to be seeking an apartment for several months, and then just /donate/ the remaining months to boligportalen? Absurd.

After spending some time on boligportalen, in a human-fashion, I found common two strategies that landlords used for finding a tenant.
The first one is the well-known [[https://en.wikipedia.org/wiki/First-come,_first-served]["first-come, first-served"]]-strategy.
This approach usually involved signing up for a display session through phone calls, until the /N/-spots for display session were filled.
Landlords using this strategy seems to heavily favor phone calls over messages sent through boligportalen.
This strategy requires a fast reaction from the /future/ tenants, and leaves no hope for the lazy.

The second strategy were primarily used by landlords who did not want phone calls.
It involves pilling up a stack of messages from hopeful future tenants, and then picking /N/ tenants for a display session based on recency of the messages at the time of checking the inbox.

I quickly realized that the second strategy were tough to deal with, due to its sporadic behaviour.
However, the interaction with the first strategy could definitely be improved.
The current interaction involve manually checking for new listings in a sporadic [[https://en.wikipedia.org/wiki/Heartbeat_(computing)][hearbeat-fashion]].
This process comes with a severe risk for insanity, and could ideally be turned into a [[https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern][publish-subscribe]] pattern.
For the non-computer science reader: Instead of manually checking for new listings, it would be more ideal to receive notifications for when a new listings appear.

Doing this process transformation is relatively simple, and is accomplished by scraping the site with a relatively high interval (e.g. every 3s) and then publish changes as they occur.
From the get-go I knew I wanted to subscribe to the updates on my iPhone, and using the built-in notification system was a natural choice.
However, for hackish project like this one, it is not trivial to access that channel, as it requires a related app and approval of Apple in order to use their notification servers.
I first tried sending emails poorly hosted mail server, and realized that the iPhone mail-pulling had too low frequency for my use case.
I had a desire to notified of new listings within ten seconds of them appearing online, so I investigate other channels.
I knew my old university mail, which ran on a Microsoft Exchange server, had the ability to push mails directly to my phone, so I started to research for Exchange hosting.
Quickly did I realize that moving me private mail to an Exchange solution would be too expensive.
However, during my research I discovered that [[https://mail.google.com][Gmail]], in combination with the [[https://itunes.apple.com/us/app/gmail-email-by-google-secure-fast-organized/id422689480?mt=8][Gmail App for iPhone]], were able to accomplish the same push behaviour.
After I few tests, I realized that this would be suitable for use case.

Unleashing /the beast/ (ie: the robot) quickly yielded some results. The robot published listings to me while I were at work, which I contacted straight away, and within a few days I were invited to more than five display sessions. During this time I recall a lot of funny phone conversations with landlords, they usually went something like this:

#+BEGIN_QUOTE
  *Me*: /Hello, my name is Thomas and call regarding the apartment you have listed on boligportalen/

  *Landlord*: /Uh... oh... eh?/ 🤔

  *Me*: /Did I get the wrong number, or is it already unavailable?/

  *Landlord*: /Yes, it is still I available... it is just that I JUST put it up?/

  /... proceeds to get display session invitation/ 🎉
#+END_QUOTE

During the time the robot were running boligportalen decided to create an iPhone App with an alike feature, but I never got it to work (and I would never trust its publishing delay). I ended up with an apartment within two weeks after been invited to over twenty display sessions.

You can find the (old) source code for the robot [[https://github.com/tpanum/boligcrawler][here]]. 🤖

** NixOS: The distribution I got to love
:PROPERTIES:
:EXPORT_FILE_NAME: nixos_the_distribution_i_got_to_love
:EXPORT_DATE: 2018-06-14T12:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :keywords '("linux" "phd")
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description The choice of Linux-based operating system for my PhD studies
:END:

As I started my PhD studies I was faced with the choice of deciding my own hardware setup for the next 3 years, as long as I used the bureaucratic supply contract and kept a certain budget.
I could easily see that getting a 15" MacBook Pro and an external monitor would blow the budget, so I quickly decided I wanted to adopt Linux full-time.
At my previous company, [[https://tryg.dk][Tryg]], I used the new 15" MacBook Pro with Touch Bar.
Needless to say, the touch bar is god awful and is simply a tool to steal space from relevant components (e.g. media keys).
With that frustration in mind, I decided to picking up the *Lenovo ThinkPad T470s*.

#+html: <center>
#+ATTR_HTML: :width 70%
[[file:img/t470s.jpg]]
#+html: </center>

*** Choice of Distribution
It was my first time trying to run Linux full-time, as I previous had used OSX for more than 7 years.
During my time in high school one of my classmates was actually the owner and administrator of [[http://www.archlinux.dk/][the danish Arch Linux community]].
Back then I definitely did not have the skills required to pursue any hand-tailored Linux like [[https://wiki.archlinux.org/index.php/Arch_Linux][Arch Linux]], but luckily after receiving my computer science degree, the thought does not seem that frightening to me anymore.
Through my education, I started to appreciate minimalism and the ability to pick-and-choose *only* the tools you /actually/ need.
However, I was aware of some the pitfalls that comes with the rolling release nature of Arch, and the thought of my computer suddenly malfunctioning one day, and the entire time spend configuring it being lost, was scary.

I then started my search for minimal alternatives, especially ones that could reduce the configuration overhead that typically comes with Arch Linux, Gentoo, and alike.
This was when I discovered [[https://nixos.org/][NixOS]], and when first read the description I was unsure whether the feature promises was too good to be true.
It claimed that it was "Declarative" (e.g. less time configuring) and "Reliable" (atomic upgrades and rollbacks) was it truly too good to be true? I had to dig in to find out.

*** NixOS
#+html: <center>
#+ATTR_HTML: :width 20%
[[file:img/nixos_logo.png]]
#+html: </center>

NixOS is a very different Linux distribution than /the classical ones/ (Ubuntu, Debian, Arch, etc.)
It relies heavy on the [[https://nixos.org/nix/][Nix package manager]], which is available as a standalone binary for Unix distributions.
However, in NixOS, its use has been taken the next level as it functions as a center piece for package management *and* configuration management.
Essentially, Nix is declarative programming language and NixOS evolves around having a single =configuration.nix=-file of this language, that is responsible for /declaring/ your environment in the Nix programming language.
Like other programming languages, you can reference other language files and thereby let your =configuration.nix= reference other Nix-files and decompose your system configuration.
When you run the =nixos-generate-config= during install, you will be receiving a =configuration.nix= file that looks like the following:

#+BEGIN_EXAMPLE nix
  # Edit this configuration file to define what should be installed on
  # your system.  Help is available in the configuration.nix(5) man page
  # and in the NixOS manual (accessible by running ‘nixos-help’).

  { config, pkgs, ... }:

  {
    imports =
      [ # Include the results of the hardware scan.
        ./hardware-configuration.nix
      ];

    # Use the systemd-boot EFI boot loader.
    boot.loader.systemd-boot.enable = true;
    boot.loader.efi.canTouchEfiVariables = true;

    # networking.hostName = "nixos"; # Define your hostname.
    # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.

    # ...

    # Set your time zone.
    # time.timeZone = "Europe/Amsterdam";

    # List packages installed in system profile. To search, run:
    # $ nix search wget
    # environment.systemPackages = with pkgs; [
    #   wget vim
    # ];

    # ...

    # Open ports in the firewall.
    # networking.firewall.allowedTCPPorts = [ ... ];
    # networking.firewall.allowedUDPPorts = [ ... ];
    # Or disable the firewall altogether.
    # networking.firewall.enable = false;

    # ...

    # Enable the KDE Desktop Environment.
    # services.xserver.displayManager.sddm.enable = true;
    # services.xserver.desktopManager.plasma5.enable = true;

    # Define a user account. Don't forget to set a password with ‘passwd’.
    # users.extraUsers.guest = {
    #   isNormalUser = true;
    #   uid = 1000;
    # };

    # This value determines the NixOS release with which your system is to be
    # compatible, in order to avoid breaking some software such as database
    # servers. You should change this only after NixOS release notes say you
    # should.
    system.stateVersion = "18.03"; # Did you read the comment?
  }
#+END_EXAMPLE

I left out some of the commented options to shrink the size for visibility, but I think this default =configuration.nix=-file give a sense of how and the extend the Nix language can configure your system.
For a complete list of options visit the [[https://nixos.org/nixos/options.html#][Nix Option site]].
When you modify the your =configuration.nix=-file and want the changes to take effect, you use the =nixos-rebuild {switch, boot}= command in order to migrate to a new system configuration directly or on next boot respectively.
I highly encourage you to read the [[https://nixos.org/nixos/manual/][well-written manual]], and you can find my personal =configuration.nix= in [[https://github.com/tpanum/dotfiles/tree/master/nix][my dotfiles repository]].
It is current about 600 lines, and I run a very minimal environment with just a window manager and a bit of [[https://www.reddit.com/r/unixporn/][ricing]].
So currently I have a setup which sits at about ~1 GB RAM usage on boot with [[https://www.gnu.org/software/emacs/][Emacs]], [[https://i3wm.org/][i3wm]], and Firefox Quantum.

*** Aftermath
Right now I am typing this article on my T470s running NixOS, and I am about six months into the adventure.
Was it everything I hoped for? Definitely! During my adventure I had to upgrade my single drive laptop to a 1 TB drive, which lead me to try the reproducibility of NixOS and it went smoothly.
It has been a bit of wild ride and the rolling updates managed to break my system twice, however, the rollback functionality made sure that no unrevertable harm was made.
Overall, I can highly recommend trying out NixOS and often find my self wondering why it has not gotten more traction since its first release in 2003.

** Disable Bouncer Playback Spam for Emacs Circe Notifications
:PROPERTIES:
:EXPORT_FILE_NAME: disable_bouncer_playback_spam_for_emacs_circe_notifications
:EXPORT_DATE: 2018-08-10T12:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :keywords '("emacs" "programming")
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description Code snippet for disabling playback spam in Emacs IRC client
:END:

I recently changed to using [[https://github.com/jorgenschaefer/circe][circe]] as my everyday IRC client.
Despite the [[https://github.com/eqyiel/circe-notifications][circe-notifications]] being featureful, the suggested way to reduce notification spam from your irc bouncer is a bit of a hack.
As stated in the readme, simply delay the activation hook by /x/ seconds and pray it is large enough for missing all notifcations during playback.

#+html: <center>
#+ATTR_HTML: :width 70%
[[file:img/team_chat.png]]
#+html: </center>

From my experience it works reasonably well, however, when you work on a laptop (with =circe-lagmon-mode= for reconnection after suspend) the issue persist as you reconnect to your bouncer in the same emacs session.
I am using ZNC as my bouncer, and it conviently prefixes all messages with a timestamp.
Knowing this, I customized =circe-notifications-notify= to ignore messages with such a prefix.

#+BEGIN_SRC lisp
  (defun circe-notifications-notify (nick body channel)
    (unless (string-match "^\[[0-9]+:[0-9]+\]" body)
        (alert
         body
         :severity circe-notifications-alert-severity
         :title nick
         :style circe-notifications-alert-style)))
#+END_SRC

** NixOS: One Year In (I'm still in love)
:PROPERTIES:
:EXPORT_FILE_NAME: nixos_one_year_in_im_still_in_love
:EXPORT_DATE: 2019-01-10T12:00:00+02:00
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :keywords '("nixos" "linux")
:EXPORT_HUGO_CUSTOM_FRONT_MATTER+: :description One year of NixOS usage in review
:END:

As I have written in a [[/blog/nixos-the-distribution-i-got-to-love][previous post]], I switched to [[https://nixos.org/][NixOS]] from [[https://en.wikipedia.org/wiki/MacOS][OS X]].
I have now been using it for 13 months, and wish to my general desktop configurations and experiences.

*** Desktop Environment? Window Manager?

Most Linux users are very avid to either discuss or highlight the Desktop Environment (DE) or their use of a minimalistic use of a Window Manager-only setup (VM).
The discussions can, even as a senior engineer, become quite loopy and feel without ending at times.
In case you are curious about it, head over to [[https://www.reddit.com/r/unixporn/][/r/unixporn]] (I'm a shameless fan) or [[https://www.reddit.com/r/linuxmasterrace/][/r/linuxmasterrace]] and get your dose of nerdy discussions.

Except from the avoidance of endless discussions, I am sadly not that different, I have tried an unhealthy dose of DEs and WMs over the last year.
However, I haven't changed my setup dramatically within the last six months, which I hope is a sign of me converging to an ideal solution for me.
Thankfully, [[https://nixos.org/][NixOS]] makes in incredibly easy to try out different DEs and VMs, and it even cleans up after it self leaving you without dangling packages(!).
I have been through a couple, firstly: [[https://www.kde.org/][KDE Plasma]] and [[https://www.gnome.org/][GNOME3]].
After using Plasma briefly, the design of GNOME appealed more to me as it felt more intuitive to me personally.
I stuck with GNOME for a couple of months, before [[https://wiki.gnome.org/Projects/dconf][getting annoyed by the fact that configurations are being stored on a database]] while also getting persuaded by [[https://www.reddit.com/r/unixporn/][/r/unixporn]] to try [[https://wiki.archlinux.org/index.php/bspwm][bspwm]].

Booting with bspwm for the first time, to realize that [[https://wiki.archlinux.org/index.php/Sxhkd][sxhkd]] (hotkey daemon) does not have any default configuration in case of no configuration file [/seriously, what can of default behaviour is that?/] leaving your keyboard completely paralyzed.
Resolving that issue, let me to use bspwm for coupe of weeks until realizing time consuming process of implementing almost every single key binding from scratch.
This let me to move on to the more user-friendly [[https://i3wm.org/][i3]], which has some sane defaults.

Where are we today? As of writing, I have been using the [[https://wiki.archlinux.org/index.php/bspwm][bspwm]] + [[https://wiki.archlinux.org/index.php/Sxhkd][sxhkd]] cocktail for over six months.
/But didn't you move away from bspwm, due to its heavy requirement?/ Yes, but that was also what I ended up missing.
Realizing the unchangeable quirks of many other hotkey daemons, I realized how I missed sxhkd's ability to do /exactly like I wanted/.

#+html: <center>
#+ATTR_HTML: :width 70%
[[file:img/my_desktop_2019.png][file:img/my_desktop_2019_small.png]]
#+html: </center>

*** Cmd+C, Cmd+V

The switch back to bspwm was heavily driven by one of the concepts I missed the most about running OS X, the elegant integration of the =cmd= key.
Despite the typical anti-Apple movement of Linux users, some design choices in OS X are deeply elegant, with one of the most overlooked ones being the hotkey daemon.

For those who have never used OS X, or in clear what I hint towards, let's start off with an example.
Most developers spend a decent amount of time in the terminal, for which the =ctrl= key has a very distinct behaviour, namely the fact it is used to [[https://en.wikipedia.org/wiki/Signal_(IPC)][send signals]], e.g. canceling execution with =ctrl-c= (=SIGINT=).
This often interveins with typical application-based shortcuts, e.g. =ctrl-c= (app: =copy=, term: =SIGINT=).

This leads to the shortcut in most terminal applications for =copy= is either =ctrl-alt-c= or =ctrl-shift-c=.
However, on OS X, it is a much more cohesive experience as typical application shortcuts are performed with =cmd=, e.g. =cmd-c= is =copy=.
This simply elegant design, and well thought out.
For many months I tried to replicate this behaviour to Linux, however, it is slightly non-trivial as most shortcuts are directly baked into the applications.

However, sxhkd in combination with a bit of clever scripting actually got me some places.
I have bound my =super-c= to the following script (with a replica for =paste= on =super-v=).

#+BEGIN_SRC sh
  CURRENT_WINDOW=$(xprop -id $(xdotool getwindowfocus) WM_CLASS | awk '{ print $3 }' | cut -d '"' -f2)
  if [ "$CURRENT_WINDOW" = "Alacritty" ]; then
      xdotool key --delay 0 --clearmodifiers ctrl+shift+c
  else
      xdotool key --delay 0 --clearmodifiers ctrl+c
  fi
#+END_SRC

Not as cohesive as the OS X experience, but it works like I want, and allow me to use (=super-c=, =super-v=) to (=copy=,=paste=) in any application.

*** File Manager: fzf
Another small modification that I use a lot for my daily tasks, is a customized [[https://github.com/junegunn/fzf][fzf]] script.
That, in combination with =cp= and =mv= (and getting used naming files in a unix friendly way) made my need for a file manager completely obsolete.
In short, it is a script that activates =fzf= on my home directory, for which it pipes the result to [[https://xyne.archlinux.ca/projects/mimeo/][mimeo]].
The script is very efficient (thanks to =fzf=) at searching, even in deeply nested directories, and is being activated with =super+d=.
You can see a preview of the whole process below, and find the script.

#+html: <center>
#+ATTR_HTML: :width 70%
[[file:img/fzf-open.gif][file:img/fzf-open.gif]]
#+html: </center>

#+BEGIN_SRC sh
  #!/run/current-system/sw/bin/bash
  IFS=':'

  get_selection() {
      find ~ -type d ! -readable -prune -o -print | fzf --reverse --color pointer:3,info:14,bg+:-1
  }

  if selection=$( get_selection ); then
      nohup mimeo "$selection" >/dev/null 2>&1 &
      sleep 0.05
  fi

  echo -ne ' '
  exit 0
#+END_SRC

Beware! the script contains a bit of color configuration to match my personal [[https://github.com/arcticicestudio/nord][nord theme]].

*** Autostart
OS X had the ability to reopen application upon boot, that was open during last shutdown.
Just like your favorite web browser, the feature was very convenient.
However, it often (just like your browser) lead to a lot of dangling and unused resources that just /sat there/ after every reboot.
Reproducing the same behaviour on Linux was non-trivial, so looked other ways.

I started using autostart for spinning up specific application on every boot, and now I even prefer that, rather than having your left overs served to you from the last boot.
Currently, I have Firefox and Emacs in autostart and it seems to fit perfectly for my needs.

*** Applications
This list is a small sample of some of the applications I use, and have used (R.I.P. ✝).

- bspwm, sxhkd [✝ GNOME3, ✝ i3] --- /window manager and hotkey daemon/
- Plank [✝ polybar] --- /simple dock with icons/
- Thunderbird [✝ claws, ✝ notmuch] --- /mail client with great html support/
- tint2 [✝ polybar] --- /tiny bar with basic system information and systray/
- rofi --- /application launcher/
- emacs --- /my beloved text editor/
- Firefox --- /my current browser of choice/
- Alacritty [✝ urxvt, ✝ termite] --- /decent modern terminal (finally with scrollback)/
- dunst --- /notifications daemon/

*** All in all
Running NixOS as a daily driver has been highly enjoyable, [[/blog/nixos-the-distribution-i-got-to-love][even during times of a hard disk migration]].
In fact, I ended up loving it so much that I changed my personal [[https://en.wikipedia.org/wiki/Virtual_private_server][VPS]] to run NixOS.
NixOS seems like taste of what the future of operating systems will bring, true reproducibility *will* be a requirement of the future.
However, you can try it out today, /free of charge/.

My only advice to you, dear reader, is to head over to the [[https://nixos.org/nixos/manual/index.html#ch-installation][NixOS manual]] to try it out today.

*** Planned Improvements (2019)
I wish to start using [[https://orgmode.org/manual/Agenda-commands.html][org-agenda]] (extensible todo system for Emacs), properly.
Properly, refers to the fact that I have tried it once, but never got /hooked/ on it.
My experience with =org-mode= was the same, not entirely hooked on the first attempt, but now I cannot live without it.
